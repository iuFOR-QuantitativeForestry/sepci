
#' Crown cross sectional crown projection area using two ellipsoid
#'
#' @param height_beginning_crown Height were the crown begins.
#' @param maximum_crown_width_height Height were the crown reaches its maximum
#' width,
#' @param maximum_crown_width_radius Radius of the maximum width of the crown.
#' @param tree_height Height of the tree.
#' @param height_cross_sectional_area Height were we want to get the cross
#' sectional area
#'
#' @return The cross sectional area of the crown at height_cross_sectional_area
#' if height_cross_sectional_area is in the lower ellipsoid it will return
#' the area at maximum_crown_width_height
#' @export
#'
#' @examples
#' ccs_cparea_ellipsoid(3,4,2,5,3.5)
ccs_cparea_ellipsoid <- function(height_beginning_crown,
                                 maximum_crown_width_height,
                                 maximum_crown_width_radius,
                                 tree_height,
                                 height_cross_sectional_area) {

  # We check if the asked cs height is above or below the
  # maximum crown radius or outside the crown
  if (height_cross_sectional_area > tree_height) {
    return(0)
  }

  # The ellipse generated by cutting with plane z=constant is in reality
  # just a circle (because b=c). We need the radius of this circle.

  a <- 0
  b <- maximum_crown_width_radius

  # We check if the asked cs height is on the upper ellipsoid
  if (height_cross_sectional_area > maximum_crown_width_height) {
    # Axes of upper ellipsoid
    a <- (tree_height - maximum_crown_width_height)
    cut_plane_height <- height_cross_sectional_area - maximum_crown_width_height
    radius <- sqrt(b ^ 2 * (1 - (cut_plane_height ^ 2 / a ^ 2)))
  } else {
    # Axes of lower ellipsoid
    radius <- b
  }

  names(radius) <- NULL
  return(pi * radius ^ 2)
}

#' Crown cross sectional volume using two ellipsoid
#'
#' @param height_beginning_crown Height were the crown begins.
#' @param maximum_crown_width_height Height were the crown reaches its maximum
#' width,
#' @param maximum_crown_width_radius Radius of the maximum width of the crown.
#' @param tree_height Height of the tree.
#' @param height_cross_sectional_v Height were we want to get the cross
#' sectional volume
#'
#' @return The cross sectional volume of the crown above
#' height_cross_sectional_v.
#' @export
#'
#' @examples
#' ccs_volume_ellipsoid(3,4,2,5,3.5)
ccs_volume_ellipsoid <- function(height_beginning_crown,
                                 maximum_crown_width_height,
                                 maximum_crown_width_radius,
                                 tree_height,
                                 height_cross_sectional_v) {

  # We check if the asked cs height is above  the crown
  if (height_cross_sectional_v > tree_height) {
    return(0)
  }

  b <- maximum_crown_width_radius
  # Axes of upper ellipsoid
  a_u <- (tree_height - maximum_crown_width_height)
  cut_plane_height <- max(height_cross_sectional_v -
                            maximum_crown_width_height, 0)
  volume_u <-  pi * (2 / 3 * b^2 * a_u -
                       b^2 * cut_plane_height +
                       b^2 / a_u^2 * cut_plane_height^3 / 3)
  # Axes of lower ellipsoid
  a_l <- (maximum_crown_width_height - height_beginning_crown)
  cut_plane_height <- min(max(maximum_crown_width_height -
                                height_cross_sectional_v, 0), a_l)
  volume_l <- pi * (2 / 3 * b^2 * a_l -
                      b^2 * cut_plane_height +
                      b^2 / a_l^2 * cut_plane_height^3 / 3)
  volume <- volume_u + volume_l

  names(volume) <- NULL
  return(volume)
}

#' Crown cross sectional surface using two ellipsoid
#'
#' @param height_beginning_crown Height were the crown begins.
#' @param maximum_crown_width_height Height were the crown reaches its maximum
#' width,
#' @param maximum_crown_width_radius Radius of the maximum width of the crown.
#' @param tree_height Height of the tree.
#' @param height_cross_sectional_s Height were we want to get the cross
#' sectional surface
#'
#' @return The cross sectional surface of the crown above
#' height_cross_sectional_s.
#' @export
#'
#' @examples
#' ccs_surface_ellipsoid(3,4,2,5,3.5)
ccs_surface_ellipsoid <- function(height_beginning_crown,
                                  maximum_crown_width_height,
                                  maximum_crown_width_radius,
                                  tree_height,
                                  height_cross_sectional_s) {

  # We check if the asked cs height is outside the crown
  if (height_cross_sectional_s > tree_height) {
    return(0)
  }

  b <- maximum_crown_width_radius

  # Axes of upper ellipsoid
  a_u <- (tree_height - maximum_crown_width_height)
  cut_plane_height <-
    max(height_cross_sectional_s - maximum_crown_width_height, 0)
  if (a_u == 0) {
    area_u <- 0
  } else {
    area_u <- pi * b * a_u * (pi / 2 -
                                asin(cut_plane_height / a_u) -
                                (1 / 2) * sin(2 * asin(cut_plane_height / a_u)))
  }

  # Axes of lower ellipsoid
  a_l <- (maximum_crown_width_height - height_beginning_crown)
  cut_plane_height <- min(max(maximum_crown_width_height -
                                height_cross_sectional_s, 0), a_l)
  if (a_l == 0) {
    area_l <- 0
  } else {
    area_l <- pi * b * a_l * (pi / 2 -
                                asin(cut_plane_height / a_l) -
                                (1 / 2) * sin(2 * asin(cut_plane_height / a_l)))
  }

  area <- area_u + area_l

  names(area) <- NULL
  return(area)
}




#' Crown cross sectional crown projection area using a cone
#'
#' @param height_beginning_crown Height were the crown begins.
#' @param maximum_crown_width_radius Radius of the maximum width of the crown.
#' @param tree_height Height of the tree.
#' @param height_cross_sectional_area Height were we want to get the cross
#' sectional area
#'
#' @return The cross sectional crown projection area of the crown at
#' height_cross_sectional_area.
#' @export
#'
#' @examples
#' ccs_cparea_cone(3,2,5,3.5)
ccs_cparea_cone <- function(height_beginning_crown,
                            maximum_crown_width_radius,
                            tree_height,
                            height_cross_sectional_area) {

  if (height_cross_sectional_area >=  tree_height) {
    return(0)
  }
  if (height_cross_sectional_area < height_beginning_crown) {
    height_cross_sectional_area <- height_beginning_crown
  }

  # computing cone angle
  alpha <-
    atan(maximum_crown_width_radius / (tree_height - height_beginning_crown))

  cone_height <- tree_height - height_cross_sectional_area

  # radius at asked height
  radius_asked <- tan(alpha) * cone_height

  return(pi * radius_asked ^ 2)
}

#' Crown cross sectional volume using a cone
#'
#' @param height_beginning_crown Height were the crown begins.
#' @param maximum_crown_width_radius Radius of the maximum width of the crown.
#' @param tree_height Height of the tree.
#' @param height_cross_sectional_v Height were we want to get the cross
#' sectional volume
#'
#' @return The cross sectional volume of the crown above
#' height_cross_sectional_v.
#' @export
#'
#' @examples
#' ccs_volume_cone(3,2,5,3.5)
ccs_volume_cone <- function(height_beginning_crown,
                            maximum_crown_width_radius,
                            tree_height,
                            height_cross_sectional_v) {
  if (height_cross_sectional_v >=  tree_height) {
    return(0)
  }
  if (height_cross_sectional_v < height_beginning_crown) {
    height_cross_sectional_v <- height_beginning_crown
  }

  # computing cone angle
  alpha <-
    atan(maximum_crown_width_radius / (tree_height - height_beginning_crown))

  cone_height <- tree_height - height_cross_sectional_v

  # radius at asked height
  radius_asked <- tan(alpha) * cone_height

  return(1 / 3 * pi * radius_asked ^ 2 * cone_height)
}

#' Crown cross sectional surface using a cone
#'
#' @param height_beginning_crown Height were the crown begins.
#' @param maximum_crown_width_radius Radius of the maximum width of the crown.
#' @param tree_height Height of the tree.
#' @param height_cross_sectional_s Height were we want to get the cross
#' sectional surface
#'
#' @return The cross sectional surface of the crown above
#' height_cross_sectional_s.
#' @export
#'
#' @examples
#' ccs_surface_cone(3,2,5,3.5)
ccs_surface_cone <- function(height_beginning_crown,
                             maximum_crown_width_radius,
                             tree_height,
                             height_cross_sectional_s) {

  if (height_cross_sectional_s >=  tree_height) {
    return(0)
  }
  if (height_cross_sectional_s < height_beginning_crown) {
    height_cross_sectional_s <- height_beginning_crown
  }

  # computing cone angle
  alpha <-
    atan(maximum_crown_width_radius / (tree_height - height_beginning_crown))

  cone_height <- tree_height - height_cross_sectional_s
  radius_asked <- tan(alpha) * cone_height
  slant <- sqrt(cone_height^2 + radius_asked^2)

  return(pi * radius_asked * slant)
}
